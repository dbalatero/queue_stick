* Counters (to track stats)
* Web interface for each queue runner, to get health information
  as well as processing stats (and view counters)
  * API to pull stats from
* Command-line flags for:
  * --port
  * --disable-web-server
* Provides easy interface for implementing a queue worker.
  * process(record) ?
  * recover(record) ? 
  * ensure(record) ?
* (maybe later) Failure emails for given SQS message?
* Should never remove a message from the queue if it can't
  successfully process it.
* Should allow people to test their queue code easily.
* Configurable visibility timeout
* Generator for queue runner.
* Each worker should be considered to be run in its own thread,
  and therefore will have access to @local_variables without having
  to worry about synchronization.

Possible DSL
---------------
class MyWorker < QueueTip::Worker
  queue_name :video_transcoding_work

  def process(message)
  end

  def recover
  end

  def ensure
  end
end
