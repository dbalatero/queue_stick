DONE * Counters (to track stats)
* Web interface for each queue runner, to get health information
  as well as processing stats (and view counters)
  * API to pull stats from
* Pulls from SQS as a queue source.
* Command-line flags for:
  * --port
  * --disable-web-server
DONE * Provides easy interface for implementing a queue worker.
  * process(record) ?
  * recover ?
* (maybe later) Failure emails for given SQS message?
DONE * Should never remove a message from the queue if it can't
       successfully process it.
DONE * Should allow people to test their queue code easily.
DONE * Configurable visibility timeout
* Generator for queue runner.
* Each worker should be considered to be run in its own thread,
  and therefore will have access to @local_variables without having
  to worry about synchronization.

Possible DSL
---------------
class MyWorker < QueueTip::Worker
  #DONE
  queue_name :video_transcoding_work
  visibility_timeout 6000

  counter :my_counter

  #DONE
  def process(message)
  end

  #DONE
  def recover
  end
end
